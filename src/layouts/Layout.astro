---
import Footer from "@/components/Footer.astro";
import Navbar from "@/components/Navbar.astro";
import "@/styles/globals.css";
import { ViewTransitions } from "astro:transitions";
import { defaultMeta } from "../data/socials.ts";
import { getOgImagePath } from "../utils/generateOgImages";

interface Props {
  title: string;
  description?: string;
  ogImage?: {
    src: string;
    alt: string;
  };
}

const {
  title = defaultMeta.title,
  description = defaultMeta.description,
  ogImage = defaultMeta.ogImage,
} = Astro.props;

const ogImageURL = new URL(getOgImagePath(Astro.url.pathname), Astro.url.origin)
  .href;
const canonicalURL = new URL(Astro.url).href;

const getDefaultTitle = () => {
  const pathName = Astro.url.pathname.replace("/", "");
  return pathName.charAt(0).toUpperCase() + pathName.slice(1);
};

const finalTitle = title || getDefaultTitle();
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }

  // Add this block
  document.addEventListener("astro:after-swap", () => {
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  });
</script>

<html lang="en">
  <head>
    <!-- Essential Meta Tags -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- SEO Meta Tags -->
    <meta name="title" content={finalTitle} | satori.arw />
    <meta name="description" content={description} />

    <!-- Open Graph Meta Tags -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={finalTitle} | satori.arw />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageURL} />
    <meta property="og:image:alt" content={ogImage.alt} />
    <meta property="og:locale" content="en_US" />

    <!-- Twitter Meta Tags -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={finalTitle} | satori.arw />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImageURL} />

    <!-- Generator Meta Tag -->
    <meta name="generator" content={Astro.generator} />

    <!-- Title Tag -->
    <title>{finalTitle} | satori.arw</title>
    <ViewTransitions />
  </head>
  <Navbar />
  <body>
    <slot />
  </body>
  <Footer />
  <style>
    nav {
      -ms-overflow-style: none; /* Internet Explorer 10+ */
      scrollbar-width: none; /* Firefox */
    }
    nav::-webkit-scrollbar {
      display: none; /* Safari and Chrome */
    }
    :root {
      --pagefind-ui-primary: #d8d8d8;
      --pagefind-ui-secondary: #d8d8d8;
      --pagefind-ui-background: #1d1f21;
      --pagefind-ui-border: #2b2b2b;
      --pagefind-ui-tag: #d8d8d8;
      --pagefind-ui-text: #d8d8d8;
      --pagefind-ui-font: "InterVariable", "Inter", sans-serif;
    }
  </style>
</html>
